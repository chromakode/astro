---
import { Markdoc } from '@astrojs/markdoc';
import { Code } from 'astro/components';
import Marquee from '../components/Marquee.astro';
import { getCollection } from 'astro:content';
import RedP from '../components/RedP.astro';

const entries = await getCollection('blog');
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Astro</h1>
		<article>
			{
				entries.map(async (entry) => {
					const { Content } = await entry.render();
					if (entry.id.endsWith('mdoc')) {
						return (
							<Fragment>
								<h1>{entry.data.title}</h1>
								<Content
									components={{
										marquee: Marquee,
										p: RedP,
										pre: {
											component: Code,
											props({ attributes, getTreeNode }) {
												return {
													...attributes,
													lang: attributes.lang ?? attributes['data-language'],
													code: attributes.code ?? Markdoc.renderers.html(getTreeNode().children),
												};
											},
										},
									}}
								/>
								<hr />
							</Fragment>
						);
					}
					return (
						<>
							<h1>{entry.data.title}</h1>
							<Content />
							<hr />
						</>
					);
				})
			}
		</article>
	</body>
</html>
